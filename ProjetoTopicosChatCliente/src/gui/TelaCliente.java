/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.Cliente;
import data.CustomListModel;
import data.ServidorChatInterface;
import java.rmi.Naming;
import java.util.ArrayList;

/**
 *
 * @author Scaketti
 */
public class TelaCliente extends javax.swing.JFrame {

    Cliente cliente = new Cliente(this);
    CustomListModel list_model = new CustomListModel();
    ArrayList<Cliente> clientesConectados = new ArrayList();

    /**
     * Creates new form TelaCliente
     */
    public TelaCliente() {
        initComponents();
        listClientes.setModel(list_model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConexao = new javax.swing.JLabel();
        btnServidor = new javax.swing.JButton();
        btnApelido = new javax.swing.JButton();
        txtMsgEnviar = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        lblNomeCliente = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMsgs = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtLogCliente = new javax.swing.JTextArea();
        txtServidor = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        pnlClienteConectados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listClientes = new javax.swing.JList<>();
        lblLog = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblConexao.setText("Conectado ao servidor:");

        btnServidor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/if_server_lightning_36421 (1).png"))); // NOI18N
        btnServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServidorActionPerformed(evt);
            }
        });

        btnApelido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/if_client_account_template_64002.png"))); // NOI18N
        btnApelido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApelidoActionPerformed(evt);
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        lblNomeCliente.setText("Cliente:");

        txtMsgs.setColumns(20);
        txtMsgs.setRows(5);
        jScrollPane2.setViewportView(txtMsgs);

        txtLogCliente.setColumns(20);
        txtLogCliente.setRows(5);
        jScrollPane3.setViewportView(txtLogCliente);

        txtServidor.setEnabled(false);

        txtCliente.setEnabled(false);

        pnlClienteConectados.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes conectados"));

        listClientes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "TODOS" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listClientes.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listClientesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listClientes);

        javax.swing.GroupLayout pnlClienteConectadosLayout = new javax.swing.GroupLayout(pnlClienteConectados);
        pnlClienteConectados.setLayout(pnlClienteConectadosLayout);
        pnlClienteConectadosLayout.setHorizontalGroup(
            pnlClienteConectadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClienteConectadosLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlClienteConectadosLayout.setVerticalGroup(
            pnlClienteConectadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlClienteConectadosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        lblLog.setText("Log:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNomeCliente)
                                .addGap(5, 5, 5)
                                .addComponent(txtCliente))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblConexao)
                                .addGap(5, 5, 5)
                                .addComponent(txtServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(btnServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMsgEnviar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlClienteConectados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLog)))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNomeCliente)
                                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnApelido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnServidor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMsgEnviar)
                            .addComponent(btnEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblConexao)
                                .addComponent(txtServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlClienteConectados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(lblLog)
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServidorActionPerformed
        ConfigServidor configServ = new ConfigServidor(this, cliente);
        configServ.setVisible(true);
    }//GEN-LAST:event_btnServidorActionPerformed

    private void btnApelidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApelidoActionPerformed
        ConfigCliente configC = new ConfigCliente(this, cliente);
        configC.setVisible(true);
    }//GEN-LAST:event_btnApelidoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        String ipServidor = "localhost";
        String portaServidor = "1099";
        try {
            ServidorChatInterface servidor = (ServidorChatInterface) Naming.lookup("rmi://" + ipServidor + ":" + portaServidor + "/chat");
            
            for(Cliente c : clientesConectados){
                if(c.getApelido().equals(listClientes.getSelectedValue())) c.setLogMensagens(c.getLogMensagens() + "\n" + txtMsgEnviar.getText());
            }
            
            servidor.receberMensagemCliente(cliente.getApelido(), listClientes.getSelectedValue(), txtMsgEnviar.getText());
            txtMsgEnviar.setText("");
        } catch (Exception e) {
            System.out.println("Erro: Mensagem: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void listClientesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listClientesValueChanged
        for (Cliente c : clientesConectados) {
            if (c.getApelido().equals(listClientes.getSelectedValue())) {
                txtMsgs.setText(c.getLogMensagens());
                break;
            }
        }


    }//GEN-LAST:event_listClientesValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApelido;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnServidor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblConexao;
    private javax.swing.JLabel lblLog;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JList<String> listClientes;
    private javax.swing.JPanel pnlClienteConectados;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextArea txtLogCliente;
    private javax.swing.JTextField txtMsgEnviar;
    private javax.swing.JTextArea txtMsgs;
    private javax.swing.JTextField txtServidor;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the txtLogCliente
     */
    public javax.swing.JTextArea getTxtLogCliente() {
        return txtLogCliente;
    }

    /**
     * @param txtLogCliente the txtLogCliente to set
     */
    public void setTxtLogCliente(javax.swing.JTextArea txtLogCliente) {
        this.txtLogCliente = txtLogCliente;
    }

    public void retornaCliente(Cliente cliente) {
        this.cliente = cliente;
        txtCliente.setText(cliente.getNome());
    }

    /**
     * @return the txtMsgs
     */
    public javax.swing.JTextArea getTxtMsgs() {
        return txtMsgs;
    }

    /**
     * @param txtMsgs the txtMsgs to set
     */
    public void setTxtMsgs(javax.swing.JTextArea txtMsgs) {
        this.txtMsgs = txtMsgs;
    }

    /**
     * @return the txtServidor
     */
    public javax.swing.JTextField getTxtServidor() {
        return txtServidor;
    }

    /**
     * @param txtServidor the txtServidor to set
     */
    public void setTxtServidor(javax.swing.JTextField txtServidor) {
        this.txtServidor = txtServidor;
    }

    public void insereClienteLista(String apelido) {
        Cliente c = new Cliente(null);
        c.setApelido(apelido);
        clientesConectados.add(c);
        list_model.addCliente(c);
    }

    public void atualizaMensagemCliente(String apelido, String mensagem) {
        for (Cliente c : clientesConectados) {
            if (c.getApelido().equals(apelido)) {
                System.out.println(c.getLogMensagens() + "\n" + mensagem);
                c.setLogMensagens(c.getLogMensagens() + "\n" + mensagem);
            }
        }
    }

    public void removeClienteLista(String apelido) {
        int i;
        for (i = 0; i < list_model.getSize(); i++) {
            if (apelido.equals(list_model.getElementAt(i))) {
                clientesConectados.remove(list_model.getCliente(i));
                break;
            }
        }
        list_model.removeCliente(i);
    }
}
