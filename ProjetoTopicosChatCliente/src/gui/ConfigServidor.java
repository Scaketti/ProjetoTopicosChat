/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import mensagem.Cliente;
import mensagem.ServidorChatInterface;
import java.rmi.Naming;
import javax.swing.JOptionPane;

/**
 *
 * @author foxdie
 */
public class ConfigServidor extends javax.swing.JFrame {

    TelaCliente tCliente;
    Cliente c;

    /**
     * Creates new form ConfigServidor
     *
     * @param tCliente
     * @param c
     */
    public ConfigServidor(TelaCliente tCliente, Cliente c, String ip, String porta) {
        initComponents();
        this.tCliente = tCliente;
        this.c = c;
        txtIpServidor.setText(ip);
        txtPortaServidor.setText(porta);

        if (c.isConectado()) {
            txtIpServidor.setEnabled(false);
            txtPortaServidor.setEnabled(false);
            btnConectar.setEnabled(false);
            btnDesconectar.setEnabled(true);
        }
    }

    public void mudaEstadoConexao(boolean acao) {
        txtIpServidor.setEnabled(!acao);
        txtPortaServidor.setEnabled(!acao);
        btnConectar.setEnabled(!acao);
        btnDesconectar.setEnabled(acao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIpServidor = new javax.swing.JLabel();
        lblPortaServidor = new javax.swing.JLabel();
        txtPortaServidor = new javax.swing.JTextField();
        btnConectar = new javax.swing.JButton();
        btnDesconectar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        txtIpServidor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblIpServidor.setText("IP Servidor:");

        lblPortaServidor.setText("Porta Servidor:");

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        btnDesconectar.setText("Desconectar");
        btnDesconectar.setEnabled(false);
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });

        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPortaServidor)
                        .addGap(5, 5, 5)
                        .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIpServidor)
                        .addGap(5, 5, 5)
                        .addComponent(txtIpServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addComponent(btnConectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDesconectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnConectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblIpServidor)
                            .addComponent(txtIpServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPortaServidor)
                            .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnDesconectar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        int validacao = 1;
        try { //Tenta se conectar com o servidor
            ServidorChatInterface servidor = (ServidorChatInterface) Naming.lookup("rmi://" + txtIpServidor.getText() + ":" + txtPortaServidor.getText() + "/chat");
            validacao = servidor.conectar(c.getApelido(), c.getNome(), c.getIp(), String.valueOf(c.getPorta()));
            tCliente.atualizaDadosServidor(txtIpServidor.getText(), txtPortaServidor.getText()); //Atualiza os campos da tela principal do cliente
            c.setConectado(true);
        } catch (Exception e) {
            System.out.println("Erro: Mensagem: " + e.getMessage());
        }

        if (validacao == 0) {
            mudaEstadoConexao(true); //Muda botões em relacao a conexão
            tCliente.atualizaTelaConectaDesconecta(true); //Ativa tela, copia valores, entre outros

        } else {
            JOptionPane.showMessageDialog(null, "Falha de conexão!");
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        boolean validacao = true;
        try {
            ServidorChatInterface servidor = (ServidorChatInterface) Naming.lookup("rmi://" + txtIpServidor.getText() + ":" + txtPortaServidor.getText() + "/chat");
            servidor.desconectar(c.getApelido(), c.getIp(), String.valueOf(c.getPorta()));
        } catch (Exception e) {
            System.out.println("Erro: Mensagem: " + e.getMessage());
            validacao = false;
        }

        tCliente.removeAllListaCliente();
        tCliente.atualizaDadosServidor("", ""); //Atualiza os campos da tela principal do cliente

        if (validacao) {
            mudaEstadoConexao(false); //Muda botões em relacao a conexão
            tCliente.atualizaTelaConectaDesconecta(false); //Limpa tela, limpa lista de pessoas conectadas, entre outros
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JButton btnSair;
    private javax.swing.JLabel lblIpServidor;
    private javax.swing.JLabel lblPortaServidor;
    private javax.swing.JTextField txtIpServidor;
    private javax.swing.JTextField txtPortaServidor;
    // End of variables declaration//GEN-END:variables
}
